#!/usr/bin/env ruby

require_relative "./eu4_save_analysis"

class AnalyzeTrade < EU4SaveAnalysis
  def print_node_info(node_name, node)
    node
      .total_collector_share
      .map{|tag, share| [country_name(tag), share]}
      .sort_by{|name, share| [-share, name]}
      .each do |name, share|
        puts "#{localization(node_name)} - #{name} - #{"%.6f" % share}"
      end
    puts ""
  end

  # This isn't really all that useful
  def print_trade_by_node
    @save.trade_network.nodes.each do |name, node|
      print_node_info(name, node)
    end
  end

  def print_trade_by_country
    by_country = {}
    @save.trade_network.nodes.each do |node_tag, node|
      node_name = localization(node_tag)
      node.total_collector_share.each do |tag, share|
        country_name = @save.countries[tag].name || localization(tag)
        by_country[country_name] ||= []
        by_country[country_name] << [node_name, share]
      end
    end
    by_country.sort_by{|name, shares| [-shares.map(&:last).sum, name]}.each do |name, shares|
      puts "#{name}:"
      shares.sort_by{|name, share| [-share, name]}.each do |name, share|
        puts "* #{name} - #{"%.6f" % share}"
      end
      puts ""
    end
  end

  def call
    print_trade_by_country
  end
end

if $0 == __FILE__
  AnalyzeTrade.new_from_argv.call
end
