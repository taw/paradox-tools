#!/usr/bin/env ruby

require "shellwords"
require "pathname"

unless ARGV.size >= 3
  STDERR.puts "Usage: #{$0} savegame outputdir gamepath [mod1] [mod2...]"
  exit 1
end

save_path = ARGV[0]
output = Pathname(ARGV[1])
game = ARGV[2]
mods = ARGV[3..-1]

list = %Q[
  analysis_eu4_save/aggressive_expansion $s $g
  analysis_eu4_save/analyze_autonomy $s $g
  analysis_eu4_save/analyze_debt $s $g
  analysis_eu4_save/analyze_save_game_economics $s
  analysis_eu4_save/analyze_trade $s $g
  analysis_eu4_save/analyze_trust $s $g
  analysis_eu4_save/analyze_wars $s $g
  analysis_eu4_save/analyze_wars_battles $s $g
  analysis_eu4_save/best_courthouse_places $s $g
  analysis_eu4_save/best_manufactory_places $s $g
  analysis_eu4_save/buildings $s $g
  analysis_eu4_save/buildings_by_country $s $g
  analysis_eu4_save/colonial_region_presence $s $g
  analysis_eu4_save/cultures_by_country $s $g
  analysis_eu4_save/cultures_by_development $s $g
  analysis_eu4_save/hre_religions $s $g
  analysis_eu4_save/idea_group_totals $s $g
  analysis_eu4_save/idea_groups $s $g
  analysis_eu4_save/releasable_countries $s $g
  analysis_eu4_save/releasable_hre_countries $s $g
  analysis_eu4_save/religions_by_country $s $g
  analysis_eu4_save/world_conquest_progress $s $g
].lines.grep(/\S/).map(&:chomp).map(&:strip)

root_dir = Pathname(__dir__).parent

s_str = save_path.shellescape
g_str = [game, *mods].map(&:shellescape).join(" ")

# Just in case it is still compressed, it will do nothing if already done
system "bin/unpack_save", save_path

output.mkpath
list.each do |cmd|
  name = cmd.split.first.split("/").last
  save_to = output + "#{name}.txt"
  cmd = cmd.sub("$s", s_str).sub("$g", g_str) + " >#{save_to.to_s.shellescape}"
  if save_to.exist?
    # puts "#{name} already exists"
  else
    puts "Running #{name}"
    puts cmd
    system "#{root_dir}/#{cmd}"
    puts ""
  end
end
